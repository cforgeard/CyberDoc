// eslint-disable-next-line @typescript-eslint/no-var-requires
const { argv } = require('yargs');
const { writeFile } = require('fs');
const { join } = require('path');

require('dotenv').config({
  path: join(__dirname, '../../.env'),
});

const requiredEnvNames = [
  'APP_BACKEND_URL',
  'ETHERPAD_ROOT_URL',
  'JWT_COOKIE_DOMAIN',
  'JWT_COOKIE_NAME',
  'USER_LOCAL_STORAGE_KEY',
];

for (const key of requiredEnvNames) {
  if (!process.env[key]) {
    console.error(`Missing ${key} env variable !`);
    process.exit(-1);
  }
}

if (!process.env['DISABLE_STRIPE'] && !process.env['STRIPE_PUBLIC_KEY']) {
  console.error(`Missing STRIPE_PUBLIC_KEY env variable !`);
  process.exit(-1);
} else {
  process.env['STRIPE_PUBLIC_KEY'] = 'none';
}

const environment = argv.environment;
const isProduction = environment === 'prod';
const targetPath = isProduction
  ? './src/environments/environment.prod.ts'
  : './src/environments/environment.ts';

const environmentFileContent = `
/*
Autogenerated file.
Do not directly edit
See frontend/scripts/setenv.ts
*/
export const environment = {
  production: ${isProduction},
  apiBaseURL: '${process.env.APP_BACKEND_URL}',
  etherpadBaseUrl: '${process.env.ETHERPAD_ROOT_URL}',
  authCookieDomain: '${process.env.JWT_COOKIE_DOMAIN}',
  authCookieName: '${process.env.JWT_COOKIE_NAME}',
  userLocalStorageKey: '${process.env.USER_LOCAL_STORAGE_KEY}',
  disableStripe: ${process.env.DISABLE_STRIPE},
  stripePublicKey: '${process.env.STRIPE_PUBLIC_KEY}',
}
`;

writeFile(targetPath, environmentFileContent, (err) => {
  if (err) {
    console.error(err);
    process.exit(-1);
  } else {
    console.log(`Wrote variables to ${targetPath}`);
  }
});
