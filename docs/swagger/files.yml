openapi: 3.0.0
info:
  title: CyberDoc Files API
  version: 1.0.0
  description: |
    - The application defines three rights for each node :
      - `read`
      - `write`
      - `owner`
servers:
  - url: http://localhost:3000/v1
    description: Local server
  - url: http://api.cyberdoc.fulgen.fr/v1
    description: Prod server  
paths:
  /files:
    post:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Upload a new file / create a new directory
      description: Upload a new file / create a new directory
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - mimetype
                - folderID
              properties:
                upfile:
                  description: File to upload, `null` to create a directory
                  type: string
                  format: binary
                name:
                  description: File name
                  type: string
                  example: File.pdf
                mimetype:
                  description: File mimetype, `application/x-dir` to create a directory
                  type: string
                  example: application/pdf
                folderID:
                  description: ID of the folder which will contains the new file
                  type: string
                  example: <folder UUID>
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - msg
                  - file
                properties:
                  success:
                    type: boolean
                    description: true if the operation succeeded, otherwise false
                    example: true
                  msg:
                    type: string
                    description: msg
                    example: Success
                  file:
                    oneOf:
                      - $ref: "#/components/schemas/CloudFile"
                      - $ref: "#/components/schemas/CloudDirectory"
        "400":
          description: |
            - `name` field is invalid
            - `mimetype` field is invalid
            - if `mimetype != application/x-dir` AND `upfile == null`
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `folderID` is not a valid directory
            - The current user don't have `owner` access on `folderID` 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
                
  "/files/search":
    post:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Search
      description: Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - msg
                  - results
                properties:
                  success:
                    type: boolean
                    description: true if the operation succeeded, otherwise false
                    example: true
                  msg:
                    type: string
                    description: msg
                    example: Success
                  results:
                    type: array
                    items:
                      oneOf:
                        - $ref: "#/components/schemas/CloudFile"
                        - $ref: "#/components/schemas/CloudDirectory"
        "400":
          description: Bad request (missing, `null` or invalid fields)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"


  "/files/{fileId}":
    get:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Get file/directory by ID
      description: Get file/directory by ID
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - msg
                  - content
                properties:
                  success:
                    type: boolean
                    description: true if the operation succeeded, otherwise false
                    example: true
                  msg:
                    type: string
                    description: msg
                    example: Success
                  content:
                    oneOf:
                      - $ref: "#/components/schemas/CloudFile"
                      - $ref: "#/components/schemas/CloudDirectory"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid node
            - The current user don't have `read` access on this node 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

    put:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Upload new version of an existing file
      description: Upload new version of an existing file
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - upfile
              properties:
                upfile:
                  description: File to upload
                  type: string
                  format: binary
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessResponse"
        "400":
          description: |
            - `fileId` is a directory
            - `upfile == null`
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `write` access on this file 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

    patch:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Edit file/directory metadata
      description: Edit file/directory metadata
      parameters:
        - name: fileId
          in: path
          description: File ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - directoryID
              properties:
                name:
                  type: string
                  description: File name
                  example: FileName.pdf
                directoryID:
                  type: string
                  format: uuid
                  example: 9b81d950-b605-471f-a654-4fffba6bcfc5
                  description: ID of the directory which contains the file
                preview:
                  type: boolean
                  description: If preview for this file is allowed or not
                shareMode:
                  type: string
                  enum:
                    - readonly
                    - readwrite
                  description: Sharing mode
                  example: readonly

        description: File
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid node
            - The current user don't have `owner` access on this node 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

    delete:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Delete a file/directory
      description: Delete a file/directory
      parameters:
        - name: fileId
          in: path
          description: ID of file to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid node
            - The current user don't have `owner` access on this node 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

  "/files/{fileId}/copy":
    post:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Copy a file
      description: Copy a file or a directory
      parameters:
        - name: fileId
          in: path
          description: ID of file to copy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileCopyBody"
        description: File
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - msg
                  - file
                properties:
                  success:
                    type: boolean
                    description: true if the operation succeeded, otherwise false
                    example: true
                  msg:
                    type: string
                    description: msg
                    example: Success
                  file:
                    $ref: "#/components/schemas/CloudFile"
        "400":
          description: |
            - `fileId` is a directory
            - `copyFileName` field is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `read` access on this file 
            - The current user don't have `owner` access on `destID` 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

  "/files/{fileId}/preview":
    get:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Get file preview
      description: Get file preview
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            image/png:
              schema:
                type: string
                format: binary
        "400":
          description: |
            - Preview for `fileId` is disabled
            - Preview for `fileId` is not available
            - `fileId` is a directory
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `read` access on this file 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

  "/files/{fileId}/tags":
    post:
      tags:
        - File tags
      security:
        - jwtToken: [ ]
      summary: Add a tag
      description: Add a tag
      parameters:
        - name: fileId
          in: path
          description: file ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - tagid
              type: object
              properties:
                tagid:
                  type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid node
            - The current user don't have `owner` access on this node 
            - `tagId` is not a valid tag
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
  
  "/files/{fileId}/tags/{tagId}":
    delete:
      tags:
        - File tags
      security:
        - jwtToken: [ ]
      summary: Remove a file tag
      description: Remove a file tag
      parameters:
        - name: fileId
          in: path
          description: file ID
          required: true
          schema:
            type: string
            format: uuid
        - name: tagId
          in: path
          description: Tag ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessResponse"
        "400":
          description: |
            `fileId` don't have `tagId` on it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `owner` access on this file 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

  "/files/{fileId}/download":
    get:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Download file
      description: Download file
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success (dynamic mimetype)
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: |
            `fileId` is a directory
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `read` access on this file 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

  "/files/{fileId}/export":
    get:
      tags:
        - Files
      security:
        - jwtToken: [ ]
      summary: Export file in PDF format
      description: Export file in PDF format
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "400":
          description: |
            - PDF export for `fileId` is not available
            - `fileId` is a directory
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `read` access on this file 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
                
                
  "/files/shared":
    get:
      tags:
        - File sharing
      security:
        - jwtToken: [ ]
      summary: Get files shared with current user
      description: Get files shared with current user
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - msg
                  - sharedFiles
                properties:
                  success:
                    type: boolean
                    description: true if the operation succeeded, otherwise false
                    example: true
                  msg:
                    type: string
                    description: msg
                    example: Success
                  sharedFiles:
                    type: array
                    items:
                      $ref: "#/components/schemas/CloudFile"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
      
                
  "/files/{fileId}/sharing":
    get:
      tags:
        - File sharing
      security:
        - jwtToken: [ ]
      summary: Get all users who have share access to a file
      description: Get all users who have share access to a file
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - msg
                  - users
                properties:
                  success:
                    type: boolean
                    description: true if the operation succeeded, otherwise false
                    example: true
                  msg:
                    type: string
                    description: msg
                    example: Success
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/FileShareAccess"
        "400":
          description: |
            `fileId` is a directory
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `read` access on this file 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

  
    post:
      tags:
        - File sharing
      security:
        - jwtToken: [ ]
      summary: Add share access of a file with a user
      description: Add share access of a file with a user
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - email
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessResponse"
        "400":
          description: Bad request - fileId is a directory or current user is the owner of the fileId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `owner` access on this file 
            - The application don't have a user with the specified `email`
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
    
  "/files/{fileId}/sharing/{email}":
    delete:
      tags:
        - File sharing
      security:
        - jwtToken: [ ]
      summary: Remove share access of a file with a user
      description: Remove share access of a file with a user
      parameters:
        - name: fileId
          in: path
          description: ID of file
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
            format: email

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericSuccessResponse"
        "400":
          description: Bad request - fileId is a directory or specified email doesn't have sharing access to the file
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "401":
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "404":
          description: |
            - `fileId` is not a valid file
            - The current user don't have `owner` access on this file 
            - The application don't have a user with the specified `email`
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
  

components:
  securitySchemes:
    jwtToken:
      type: apiKey
      in: cookie
      name: access_token

  schemas:

    Path:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 9b81d950-b605-471f-a654-4fffba6bcfc5
          description: Directory ID
        name:
          type: string
          example: SubDir
          description: Directory name

    SearchBody:
      type: object
      properties:
        name:
          type: string
          example: Doc*
        mimetypes:
          type: array
          description: Select only files which its mimetype is in this list
          items:
            type: string
            example: "application/pdf"
        startLastModifiedDate:
          type: string
          format: date
          description: Select only files which last modification date is after this value
        endLastModifiedDate:
          type: string
          format: date
          description: Select only files which last modification date is before this value
        tagIDs:
          description: Select only files which contains a tag which specified in this list
          type: array
          items:
            type: string
            format: uuid
            example: "9b81d950-b605-471f-a654-4fffba6bcfc5"

    FileCopyBody:
      type: object
      required:
        - destID
      properties:
        copyFileName:
          type: string
          example: FileName.pdf
          description: Copy name
        destID:
          type: string
          format: uuid
          example: 9b81d950-b605-471f-a654-4fffba6bcfc5
          description: ID of the destination directory

    CloudFile:
      description: Represents a classic file, sent by the server
      type: object
      required:
        - id
        - ownerName
        - name
        - mimetype
        - shareWith
        - size
        - updated_at
        - created_at
        - tags
        - shareMode
      properties:
        id:
          type: string
          format: uuid
          description: File ID
          example: 9b81d950-b605-471f-a654-4fffba6bcfc5
        ownerName:
          type: string
          format: uuid
          description: Owner ID
          example: John DOE
        name:
          type: string
          description: File name
          example: File.pdf
        mimetype:
          type: string
          description: File type
          example: application/pdf
        shareType:
          type: string
          enum:
            - readonly
            - readwrite
          description: Sharing type
        tags:
          type: array
          items:
            $ref: "#/components/schemas/FileTag"
          description: File tag
        size:
          type: integer
          description: File size
          example: 666
        updated_at:
          type: string
          format: date-time
          description: File last modification date
          example: "2017-07-21T17:32:28Z"
        created_at:
          type: string
          format: date-time
          description: File creation date
          example: "2017-07-21T15:32:28Z"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/FileTag"
          description: File tag
        shareMode:
          type: string
          enum:
            - readonly
            - readwrite
          description: Sharing mode
          example: readonly
          
    CloudDirectory:
      description: Represents a directory, sent by the server
      type: object
      required:
        - id
        - owner
        - name
        - mimetype
        - path
        - directoryContent
        - tags
      properties:
        id:
          type: string
          format: uuid
          example: 9b81d950-b605-471f-a654-4fffba6bcfc5
          description: Directory ID
        ownerName:
          type: string
          format: uuid
          example: John Doe
          description: Owner ID
        name:
          type: string
          example: MyDir
          description: Directory name
        mimetype:
          type: string
          enum:
            - application/x-dir
          example: application/x-dir
          description: application/x-dir for a directory
        tags:
          type: array
          items:
            $ref: "#/components/schemas/FileTag"
          description: File tag
        path:
          type: array
          description: Tree structure to access this folder, excluding the folder itself.
          items:
            $ref: "#/components/schemas/Path"
        directoryContent:
          type: array
          description: Content of the directory (if returns CloudDirectory, the directoryContent array is empty)
          items:
            oneOf:
              - $ref: "#/components/schemas/CloudFile"
              - $ref: "#/components/schemas/CloudDirectory"
              
    FileShareAccess:
      description: User who have a share access to a file
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
          format: email
          example: john.doe@gmail.com
        name:
          type: string
          example: John DOE
  
    GenericSuccessResponse:
      description: Generic error response
      type: object
      required:
        - success
        - msg
        - results
      properties:
        success:
          type: boolean
          description: true if the operation succeeded, otherwise false
          example: false
        msg:
          type: string
          description: msg
          example: Success
          
    GenericErrorResponse:
      description: Generic error response
      type: object
      required:
        - success
        - msg
      properties:
        success:
          type: boolean
          description: true if the operation succeeded, otherwise false
          example: false
        msg:
          type: string
          description: msg
          example: <error message>

    FileTag:
      description: File tag
      type: object
      required:
        - id
        - name
        - hexColor
      properties:
        id:
          type: string
          format: uuid
          example: 65af88e0-4d6f-80da-1cab-6ef5db2c719a
        name:
          type: string
          example: TODO
        hexColor:
          type: string
          pattern: "^#(?:[0-9a-fA-F]{3}){1,2}$"
          example: "#eeeeee"
