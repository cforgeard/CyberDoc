openapi: 3.0.0
info:
  title: CyberDoc 2FA API
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1
    description: Local server
  - url: http://api.cyberdoc.fulgen.fr/v1
    description: Prod server  
paths:
  /2fa/send/email:
    post:
      summary: Send token by email
      description: Send token by email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - authyId
              properties:
                authyId:
                  type: string
      responses:
        "200":
          description: Token sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Email token will be sent
                  email:
                    type: string
                    example: nicolhas.delvoye@gmail.com
                  email_id:
                    type: string
                    example: ID of sent email EMa8b6154fe52d3d9f612137d397fa3628
        "401":
          description: User doesn't exist
          content:
            application/json:
              schema:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User doesn't exist
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User doesn't exist
                    
  /2fa/send/sms:
    post:
      summary: Send token by SMS
      description: Send token by SMS
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - authyId
              properties:
                authyId:
                  type: string
      responses:
        "200":
          description: Token sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: SMS token was sent
                  cellphone:
                    type: string
                    example: +33-XXX-XXX-XX77
        "401":
          description: User doesn't exist
          content:
            application/json:
              schema:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User doesn't exist
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User doesn't exist

  /2fa/verify/token:
    post:
      summary: Verify Token validity
      description: Verify Token validity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - type
                - authyId
                - token
              properties:
                type:
                  type: string
                authyId:
                  type: string
                token:
                  type: string
      responses:
        "200":
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: Token is valid
                  token:
                    type: string
                    example: is valid
                  success:
                    type: boolean
                    example: true
                  device:
                    type: object
                    properties: 
                      id:
                        type: string
                        example: null 
                      os_type:
                        type: string
                        example: sms
                      registration_date:
                        type: integer
                        example: 1601835487
                      registration_method:
                        type: string
                        example: null
                      registration_country:
                        type: string
                        example: null
                      registration_region:
                        type: string
                        example: null
                      registration_city:
                        type: string
                        example: null
                      country:
                        type: string
                        example: null
                      region:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      ip:
                        type: string
                        example: null
                      last_account_recovery_at:
                        type: string
                        example: null
                      last_sync_date:
                        type: string
                        example: null
        "401":
          description: User doesn't exist
          content:
            application/json:
              schema:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User doesn't exist
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User doesn't exist

  /2fa/qrcode:
    post:
      summary: Generate QR Code
      description: Generate QR Code
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
                - authyId
              properties:
                email:
                  type: string
                authyId:
                  type: string
      responses:
        "200":
          description: QrCode generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: QrCode generated
                  qrcode:
                    type: object
                    properties:
                      issuer:
                        type: string
                        example: CyberDoc
                      label:
                        type: string
                        example: nicolhas.delvoye@gmail.com
                      qr_code:
                        type: string
                        example: https://s3.amazonaws.com/qr-codes-9f266de4dd32a7244bf6862baea01379/xM52diqGkqRJFA726ywzldMJ-SlS32MCKVlh2l_inxA.png
                      success:
                        type: boolean
                        example: true
        "401":
          description: User doesn't exist
          content:
            application/json:
              schema:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User doesn't exist
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User doesn't exist