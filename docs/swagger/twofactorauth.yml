openapi: 3.0.0
info:
  title: CyberDoc 2FA API
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1
    description: Local server
  - url: http://api.cyberdoc.fulgen.fr/v1
    description: Prod server

paths:
  /2fa/send/email:
    post:
      security:
        - jwtToken: [ ]
      summary: Send token by email
      description: Send token by email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: john.doe@gmail.com
      responses:
        "200":
          description: Token sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

  /2fa/send/sms:
    post:
      security:
        - jwtToken: [ ]
      summary: Send token by SMS
      description: Send token by SMS
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - phoneNumber
              properties:
                phoneNumber:
                  type: string
                  example: +33123456789
      responses:
        "200":
          description: Token sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"

  /2fa/verify/token:
    post:
      security:
        - jwtToken: [ ]
      summary: Verify Token validity
      description: Verify Token validity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  example: 123456
                secret:
                  type: string
                  example: Q3XWJXPZFRUIKV54X7NJ6RYAOH2DNCMM
                email:
                  type: string
                  example: john.doe@gmail.com
                phoneNumber:
                  type: string
                  example: +33123456789
      responses:
        "200":
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Requested resource was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"


  /2fa/secret:
    post:
      security:
        - jwtToken: [ ]
      summary: Generate Secret, URI and QR Code
      description: Generate Secret, URI and QR Code
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: john.doe@gmail.com

      responses:
        "200":
          description: QrCode generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  secret:
                    type: string
                    example: Q3XWJXPZFRUIKV54X7NJ6RYAOH2DNCMM
                  url:
                    type: string
                    example: otpauth://totp/CyberDoc%3john.doe%40gmail.com%3Fsecret=Q3XWJXPZFRUIKV54X7NJ6RYAOH2DNCMM
                  qr:
                    type: string
                    example: https://chart.googleapis.com/chart?chs=166x166&chld=L|0&cht=qr&chl=otpauth://totp/CyberDoc%3Ajohn.doe%40gmail.com%3Fsecret=Q3XWJXPZFRUIKV54X7NJ6RYAOH2DNCMM
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorResponse"
components:
  securitySchemes:
    jwtToken:
      type: apiKey
      in: cookie
      name: access_token
  schemas:
    VerificationResponse:
      description: Verification response
      type: object
      required:
        - sid
        - service_sid
        - account_sid
        - to
        - channel
        - status
        - valid
        - date_created
        - lookup
      properties:
        sid:
          type: string
          example: VEXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        service_sid:
          type: string
          example: VAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        account_sid:
          type: string
          example: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        to:
          type: string
          example: '+33123456789'
        channel:
          type: string
          example: sms
        status:
          type: string
          example: approved
        valid:
          type: boolean
          example: true
        date_created:
          type: string
          example: '2015-07-30T20:00:00Z'
        date_updated:
          type: string
          example: '2015-07-30T20:00:00Z'

    GenericErrorResponse:
      description: Generic error response
      type: object
      required:
        - success
        - msg
      properties:
        success:
          type: boolean
          description: true if the operation succeeded, otherwise false
          example: false
        msg:
          type: string
          example: <example message>
